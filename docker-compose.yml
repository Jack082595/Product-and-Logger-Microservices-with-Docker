version: '3'

services:
  zookeeper:
    container_name: 
      zookeeper_container
    image: 
      wurstmeister/zookeeper
    ports:
      - 2181:2181
    networks:
      - spring_boot_docker
  kafka:
    container_name: 
      kafka_container
    image:
      wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ZK_SERVER: zookeeper:2181
      ADVERTISED_HOST: kafka
      CONSUMER_THREADS: 5
      BROKER_ID: 1
      ADVERTISED_PORT: 9092
      KAFKA_MESSAGE_MAX_BYTES: 2000000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - spring_boot_docker

  product-service:
     build: ./product-microservice
     ports:
      - 8083:8083
     depends_on:
      - eureka-server
      - kafka
      - mysqldb
     networks:
      - spring_boot_docker

  logger-service:
     build: ./logger-microservice
     ports:
       - 8084:8084
     depends_on:
       - product-service
     networks:
       - spring_boot_docker

  api-gateway:
     build: ./api-gateway
     ports:
       - 8080:8080
     depends_on:
       - product-service
       - logger-service
     networks:
       - spring_boot_docker

  mysqldb:
      image: mysql:8
      restart: always
      networks:
        - spring_boot_docker
      environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_DATABASE=bootdb
        - MYSQL_USER=test
        - MYSQL_PASSWORD=test
      ports:
        - 3306:3306
      volumes:
        - /data/mysql:/var/lib/mysql

  eureka-server:
    build: ./eureka-server
    ports:
      - 9000:9000
    networks:
      - spring_boot_docker

networks:
  spring_boot_docker:
    driver: bridge